---
- name: Basic setup for InfluxDB
  hosts: ifdb
  become: true
  tasks:
    - name: Install certbot
      ansible.builtin.dnf:
        name:
          - certbot
        state: present

    - name: Allow certbot standalone through firewalld
      ansible.posix.firewalld:
        service: http
        zone: public
        permanent: true
        state: enabled
      notify:
        - Restart firewalld

    - name: Copy file with owner and permission, using symbolic representation
      ansible.builtin.copy:
        src: repos_dnf/influxdb.repo
        dest: /etc/yum.repos.d/influxdb.repo
        owner: root
        group: root
        mode: "644"

    - name: Import InfluxDB GPG key
      ansible.builtin.rpm_key:
        state: present
        key: https://repos.influxdata.com/influxdb.key

    - name: Install InfluxDB
      ansible.builtin.dnf:
        name: influxdb
        state: present

    - name: Start and enable InfluxDB service
      ansible.builtin.systemd:
        name: influxdb
        enabled: true
        state: started

    - name: Allow influxdb through firewalld
      ansible.posix.firewalld:
        service: influxdb
        zone: public
        permanent: true
        state: enabled
      notify:
        - Restart firewalld

    - name: Copy repo file to yum.repos.d
      ansible.builtin.copy:
        src: scripts_cron/influxping.py
        dest: /opt/scripts/influxping.py
        owner: root
        group: root
        mode: "0755"

    - name: Set ping scan (ping) cron job
      ansible.builtin.cron:
        name: "Ping scan (ping) > InfluxDB"
        minute: "*/5"
        job: "cd /opt/scripts && /opt/scripts/influxping.py ping"

    - name: Set ping scan (scan) cron job
      ansible.builtin.cron:
        name: "Ping scan (ping) > InfluxDB"
        minute: "58"
        job: "cd /opt/scripts && /opt/scripts/influxping.py scan"

    - name: Copy common influxdb config
      ansible.builtin.copy:
        src: configs/influxdb/influxdb.conf
        dest: /etc/influxdb/influxdb.conf
        owner: influxdb
        group: influxdb
        mode: "600"
      notify:
        - Restart influxdb

    - name: Setup influxdb conf
      ansible.builtin.lineinfile:
        path: /etc/telegraf/telegraf.d/common_influxdb.conf
        regexp: ".*password"
        line: 'password = "{{ secret_influxdb_telegraf_password }}"'
        state: present
      notify:
        - Restart telegraf

  handlers:
    - name: Restart firewalld
      ansible.builtin.systemd:
        name: firewalld
        state: restarted

    - name: Restart influxdb
      ansible.builtin.systemd:
        name: influxdb
        state: restarted

# _____________________________________________________________________________
- name: Setup letsencrypt and setup cron job
  hosts: ifdb
  become: true
  tasks:
    - name: Initial certbot config
      become: true
      ansible.builtin.shell:
        cmd: "certbot certonly --agree-tos --email={{secret_email}} -v -n --standalone -d kism.duckdns.org"
      register: command_output
      tags:
        - skip_ansible_lint

    - name: Set certbot cron job
      ansible.builtin.cron:
        name: "Turn off wireguard at 4am"
        minute: "0"
        hour: "4"
        job: 'certbot renew --post-hook "systemctl reload influxdb" && chown -R influxdb:influxdb /etc/letsencrypt/'

# _____________________________________________________________________________ TODO MAKE THIS MUCH NICER
- name: Setup influxdb accounts and databases
  hosts: ifdb
  become: true
  tasks:
    - name: Turn off auth for a second
      ansible.builtin.lineinfile:
        path: /etc/influxdb/influxdb.conf
        regexp: "  auth-enabled"
        line: "  auth-enabled = false"
        state: present

    - name: Restart influxdb
      ansible.builtin.systemd:
        name: influxdb
        state: restarted
