---
# Basic setup for KiSM's servers, onboarding script
# curl --silent https://raw.githubusercontent.com/kism/ansible-playbooks/master/onboard/init.sh | bash

# _____________________________________________________________________________
- name: User Setup
  hosts: all
  become: true
  collections:
    - community.general
  tasks:
    # User Management
    - name: Add the user 'kism' with a bash shell
      ansible.builtin.user:
        name: kism
        shell: /bin/bash
        append: true

    - name: Set authorized keys taken from url using lookup
      ansible.posix.authorized_key:
        user: kism
        state: present
        key: "{{ lookup('url', 'https://github.com/kism.keys', split_lines=False) }}"

    - name: Ensure group "kgadmins" exists
      ansible.builtin.group:
        name: kgadmins
        state: present

    - name: Adding existing user kism to group kgadmins
      ansible.builtin.user:
        name: kism
        groups: kgadmins

    - name: Copy the kgadmins sudoers rule
      ansible.builtin.copy:
        src: configs/sudoers/kgadmins
        dest: /etc/sudoers.d/kgadmins
        owner: root
        group: root
        mode: "0660"

    - name: Ensure that bash is setup correctly for kism
      become: true
      become_user: kism
      ansible.builtin.shell:
        cmd: "curl --silent https://raw.githubusercontent.com/kism/dotfiles-simple/master/setup.sh | bash"
      register: command_output
      changed_when: command_output.rc == 0
      tags:
        - skip_ansible_lint

    - name: Ensure that bash is setup correctly for root
      become: true
      become_user: root
      ansible.builtin.shell:
        cmd: "curl --silent https://raw.githubusercontent.com/kism/dotfiles-simple/master/setup.sh | bash"
      register: command_output
      changed_when: command_output.rc == 0
      tags:
        - skip_ansible_lint

    - name: Set timezone to Perth
      when: timezone == 'awst'
      community.general.timezone:
        name: Australia/Perth

    - name: Set timezone to UTC
      when:
        - timezone == 'utc'
      community.general.timezone:
        name: Etc/UTC

    - name: Disable root Login
      ansible.builtin.lineinfile:
        path: /etc/ssh/sshd_config
        regexp: "^.?PermitRootLogin"
        line: "PermitRootLogin no"
        state: present
      notify:
        - Restart sshd

    - name: Remove 01-PermitRootLogin just incase, looking at you redhat
      ansible.builtin.file:
        path: /etc/ssh/sshd_config.d/01-permitrootlogin.conf
        state: absent

    - name: Copy the kgadmins sudoers rule
      ansible.builtin.copy:
        src: certs/kglan_root.cer
        dest: /etc/pki/tls/certs/kglan_root.cer
        owner: root
        group: root
        mode: "0444"

  handlers:
    - name: Restart sshd
      ansible.builtin.service:
        name: sshd
        state: restarted

# _____________________________________________________________________________
# Install Packages
- name: Update all my DNF based linux hosts
  hosts: dnfbased
  become: true
  tasks:
    - name: Update DNF Cache
      ansible.builtin.dnf:
        update_cache: true
        state: present

    - name: Enable epel
      ansible.builtin.dnf:
        name: epel-release
        state: present
      register: epel

    - name: Update DNF Cache w/epel enabled
      ansible.builtin.dnf:
        update_cache: true
        state: present
      when: epel.changed
      tags:
        - skip_ansible_lint

    - name: Upgrade packages
      ansible.builtin.dnf:
        update_only: true
        state: present

    - name: Remove Cockpit
      ansible.builtin.dnf:
        name:
          - cockpit
        state: absent

    - name: Install useful apps
      ansible.builtin.dnf:
        name:
          - htop
          - iotop
          - nload
          - neofetch
          - vim
          - git
          - tmux
          - cronie
          - file
          - tree
          - wget
        state: present

- name: Update all my apt based linux hosts
  hosts: aptbased
  become: true
  tasks:
    - name: Update APT
      ansible.builtin.apt:
        upgrade: full

    - name: Install a list of packages
      ansible.builtin.apt:
        install_recommends: false
        pkg:
          - htop
          - iotop
          - nload
          - neofetch
          - vim
          - git
          - tmux
          - file
          - tree
          - wget
        state: present

# _____________________________________________________________________________
# Standard Firewall Rules
- name: Setup Firewalld on dnf based hosts
  hosts: dnfbased
  become: true
  tasks:
    - name: Install the latest version of firewalld
      ansible.builtin.dnf:
        name:
          - firewalld
        state: present

    - name: Remove cockpit from firewall config
      ansible.posix.firewalld:
        service: cockpit
        zone: public
        permanent: true
        state: disabled
      notify:
        - Restart firewalld

    - name: Allow ssh
      ansible.posix.firewalld:
        service: ssh
        zone: public
        permanent: true
        state: enabled
      notify:
        - Restart firewalld

    - name: Firewall enabled and running
      ansible.builtin.service:
        name: firewalld
        enabled: true
        state: started

    - name: Copy wireguard firewalld config
      ansible.builtin.copy:
        src: firewalld/
        dest: /etc/firewalld/services
        owner: root
        group: root
        mode: "0644"

  handlers:
    - name: Restart firewalld
      ansible.builtin.service:
        name: firewalld
        state: restarted
