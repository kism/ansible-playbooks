---
# Basic setup for KiSM's servers, init script to make this script work:
# curl --silent https://raw.githubusercontent.com/kism/ansible-playbooks/master/onboard/init.sh | bash

# _____________________________________________________________________________
- name: User and filesystem Setup
  hosts: aptbased:dnfbased:pacmanbased
  become: true
  gather_facts: false
  collections:
    - community.general
  tasks:
    # User Management
    - name: Add the user 'kism' with a bash shell
      ansible.builtin.user:
        name: kism
        shell: /bin/bash
        append: true

    - name: Set authorized keys taken from url using lookup
      ansible.posix.authorized_key:
        user: kism
        state: present
        exclusive: true
        key: "{{ lookup('url', 'https://github.com/kism.keys', split_lines=False) }}"

    - name: Ensure group "kgadmins" exists
      ansible.builtin.group:
        name: kgadmins
        state: present

    - name: Adding existing user kism to group kgadmins
      ansible.builtin.user:
        name: kism
        groups: kgadmins
        append: true

    - name: Copy the kgadmins sudoers rule
      ansible.builtin.copy:
        src: configs/sudoers/kgadmins
        dest: /etc/sudoers.d/kgadmins
        owner: root
        group: root
        mode: '0660'

    - name: Ensure that bash is setup correctly for kism
      become: true
      become_user: kism
      ansible.builtin.shell:
        cmd: 'curl --silent https://raw.githubusercontent.com/kism/dotfiles-simple/master/setup.sh | bash'
      register: command_output
      changed_when: command_output.rc == 0
      tags:
        - skip_ansible_lint

    - name: Ensure that bash is setup correctly for root
      become: true
      become_user: root
      ansible.builtin.shell:
        cmd: 'curl --silent https://raw.githubusercontent.com/kism/dotfiles-simple/master/setup.sh | bash'
      register: command_output
      changed_when: command_output.rc == 0
      tags:
        - skip_ansible_lint

    - name: Set timezone to Perth
      when: timezone == 'awst'
      community.general.timezone:
        name: Australia/Perth

    - name: Set timezone to UTC
      when:
        - timezone == 'utc'
      community.general.timezone:
        name: Etc/UTC

    - name: Remove cockpit motd
      ansible.builtin.file:
        path: /etc/motd.d/cockpit
        state: absent

    - name: Add my favorite /opt subdirectory
      ansible.builtin.file:
        path: /opt/scripts
        state: directory
        mode: '0770'

# _____________________________________________________________________________
- name: Copy the kgadmins root ca certificate rule APT/DNF
  hosts: oraclelinux:ubuntu
  become: true
  gather_facts: false
  tasks:
    - name: Copy the kgadmins root ca certificate rule
      ansible.builtin.copy:
        src: certs/kglan_root.cer
        dest: /etc/pki/tls/certs/kglan_root.crt
        owner: root
        group: root
        mode: '0444'

    - name: Update CA Certs
      become: true
      become_user: kism
      ansible.builtin.shell:
        cmd: 'update-ca-certificates'
      tags:
        - skip_ansible_lint

- name: Copy the kgadmins root ca certificate rule pacman
  hosts: manjaro
  become: true
  gather_facts: false
  tasks:
    - name: Copy the kgadmins root ca certificate rule
      ansible.builtin.copy:
        src: certs/kglan_root.cer
        dest: /etc/ca-certificates/trust-source/anchors/kglan_root.crt
        owner: root
        group: root
        mode: '0444'

- name: Copy the kgadmins root ca certificate rule debian
  hosts: debian:proxmox
  become: true
  tasks:
    - name: Copy the kgadmins root ca certificate rule
      ansible.builtin.copy:
        src: certs/kglan_root.cer
        dest: /usr/local/share/ca-certificates/kglan_root.crt
        owner: root
        group: root
        mode: '0444'

    - name: Update CA Certs
      ansible.builtin.shell:
        cmd: 'update-ca-certificates'
      tags:
        - skip_ansible_lint

# _____________________________________________________________________________
- name: SSH settings, not for proxmox
  hosts: debian:ubuntu:oraclelinux:manjaro # NOT PROXMOX
  become: true
  gather_facts: false
  tasks:
    - name: Disable root Login
      ansible.builtin.lineinfile:
        path: /etc/ssh/sshd_config
        regexp: '^.?PermitRootLogin'
        line: 'PermitRootLogin no'
        state: present
      notify:
        - Reload sshd

    - name: Ensure that /etc/ssh/sshd_config.d exists
      ansible.builtin.file:
        path: /etc/ssh/sshd_config.d
        state: directory
        mode: '0755'

    - name: Copy ssh config
      ansible.builtin.copy:
        src: configs/sshd/99-sshnopasswordauth.conf
        dest: /etc/ssh/sshd_config.d/99-sshnopasswordauth.conf
        owner: root
        group: root
        mode: '0600'
      notify:
        - Reload sshd

    - name: Remove 01-PermitRootLogin just incase, looking at you redhat
      ansible.builtin.file:
        path: /etc/ssh/sshd_config.d/01-permitrootlogin.conf
        state: absent
      notify:
        - Reload sshd

  handlers:
    - name: Reload sshd
      ansible.builtin.systemd:
        name: sshd
        state: reloaded

# _____________________________________________________________________________
- name: Update all packages on my DNF based linux hosts
  hosts: dnfbased
  become: true
  gather_facts: false
  tasks:
    - name: Update DNF Cache
      ansible.builtin.dnf:
        update_cache: true
        state: present

    - name: Enable epel
      ansible.builtin.dnf:
        name: epel-release
        state: present
      register: epel

    - name: Update DNF Cache w/epel enabled
      ansible.builtin.dnf:
        update_cache: true
        state: present
      when: epel.changed
      tags:
        - skip_ansible_lint

    - name: Upgrade packages
      ansible.builtin.dnf:
        update_only: true
        state: present

    - name: Remove packages that I want to avoid
      ansible.builtin.dnf:
        name:
          - cockpit
          - cups
          - xorg-x11-server-Xorg
          - libX11
          - libwayland-client
        state: absent

    - name: Install useful apps
      ansible.builtin.dnf:
        name:
          - htop
          - iotop
          - nload
          - neofetch
          - vim
          - git
          - tmux
          - cronie
          - file
          - tree
          - wget
          - tar
        state: present

    - name: Remove anaconda-ks.cfg
      ansible.builtin.file:
        path: /root/anaconda-ks.cfg
        state: absent

- name: Update all my apt based linux hosts
  hosts: aptbased
  become: true
  tasks:
    - name: Update APT
      ansible.builtin.apt:
        upgrade: full

    - name: Install a list of packages
      ansible.builtin.apt:
        install_recommends: false
        pkg:
          - htop
          - iotop
          - nload
          - neofetch
          - vim
          - git
          - tmux
          - file
          - tree
          - wget
          - tar
        state: present

# _____________________________________________________________________________
- name: Setup basic Firewalld on dnf based hosts
  hosts: dnfbased
  become: true
  gather_facts: false
  tasks:
    - name: Install firewalld
      ansible.builtin.dnf:
        name:
          - firewalld
        state: present

    - name: Remove cockpit from firewall config
      ansible.posix.firewalld:
        service: cockpit
        zone: public
        permanent: true
        state: disabled
      notify:
        - Restart firewalld

    - name: Allow ssh
      ansible.posix.firewalld:
        service: ssh
        zone: public
        permanent: true
        state: enabled
      notify:
        - Restart firewalld

    - name: Firewall enabled and running
      ansible.builtin.systemd:
        name: firewalld
        enabled: true
        state: started

    - name: Copy firewalld configs
      ansible.builtin.copy:
        src: firewalld/
        dest: /etc/firewalld/services
        owner: root
        group: root
        mode: '0644'

  handlers:
    - name: Restart firewalld
      ansible.builtin.systemd:
        name: firewalld
        state: restarted

# _____________________________________________________________________________
- name: Setup telegraf on dnf based hosts
  hosts: dnfbased
  become: true
  gather_facts: true
  tasks:
    - name: Copy file with owner and permission, using symbolic representation
      ansible.builtin.copy:
        src: repos_dnf/influxdb.repo
        dest: /etc/yum.repos.d/influxdb.repo
        owner: root
        group: root
        mode: '644'

    - name: Import InfluxDB GPG key
      ansible.builtin.rpm_key:
        state: present
        key: https://repos.influxdata.com/influxdb.key

    - name: Install telegraf
      ansible.builtin.dnf:
        name: telegraf
        state: present

- name: Setup telegraf on apt based hosts
  hosts: aptbased
  become: true
  gather_facts: false
  tasks:
    - name: Telegraf apt key
      ansible.builtin.apt_key:
        url: 'https://repos.influxdata.com/influxdb.key'
        id: 2582E0C5
        state: present

    - name: Add Telegraf repository
      ansible.builtin.apt_repository:
        repo: 'deb https://repos.influxdata.com/{{ ansible_distribution | lower }} {{ ansible_distribution_release }} stable'
        filename: 'telegraf'
        state: present

    - name: Install a list of packages
      ansible.builtin.apt:
        install_recommends: false
        pkg:
          - telegraf
        state: present

- name: Setup telegraf hosts
  hosts: dnfbased:aptbased
  become: true
  gather_facts: false
  tasks:
    - name: Copy common telegraf config
      ansible.builtin.copy:
        src: configs/telegraf/common_influxdb.conf
        dest: /etc/telegraf/telegraf.d/common_influxdb.conf
        owner: telegraf
        group: telegraf
        mode: '600'
      notify:
        - Restart telegraf

    - name: Setup telegraf conf
      ansible.builtin.lineinfile:
        path: /etc/telegraf/telegraf.d/common_influxdb.conf
        regexp: 'token = '
        line: 'token = "{{ secret_influxdb_telegraf_write }}"'
        state: present
      notify:
        - Restart telegraf

    - name: Start and enable telegraf service
      ansible.builtin.systemd:
        name: telegraf
        enabled: true
      notify:
        - Restart telegraf

  handlers:
    - name: Restart telegraf
      ansible.builtin.systemd:
        name: telegraf
        state: restarted
