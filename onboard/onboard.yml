---
# curl --silent https://raw.githubusercontent.com/kism/ansible-playbooks/master/onboard/init.sh | bash

- name: Basic setup for KiSM's servers
  hosts: all
  become: yes
  collections:
    - community.general
  tasks:
    - name: On hosts with sudo add kism user
      block:
        - name: Add the user 'kism' with a bash shell
          ansible.builtin.user:
            name: kism
            shell: /bin/bash
            append: yes

        - name: Set authorized keys taken from url using lookup
          ansible.posix.authorized_key:
            user: kism
            state: present
            key: "{{ lookup('url', 'https://github.com/kism.keys', split_lines=False) }}"

        - name: Ensure group "kgadmins" exists
          ansible.builtin.group:
            name: kgadmins
            state: present

        - name: adding existing user kism to group kgadmins
          ansible.builtin.user:
            name: kism
            groups: kgadmins

        - name: This command will ensure that kgadmins are able to sudo
          ansible.builtin.shell:
            cmd: 'echo "%kgadmins ALL=(ALL:ALL) NOPASSWD: ALL" > /etc/sudoers.d/kgadmins'

        - name: This command will ensure that bash is setup correctly
          become: yes
          become_user: kism
          ansible.builtin.shell:
            cmd: "curl --silent https://raw.githubusercontent.com/kism/dotfiles-simple/master/setup.sh | bash"

    - name: This command will ensure that bash is setup correctly
      become: yes
      become_user: root
      ansible.builtin.shell:
        cmd: "curl --silent https://raw.githubusercontent.com/kism/dotfiles-simple/master/setup.sh | bash"

    - name: Set timezone to Perth
      when: timezone == 'awst'
      community.general.timezone:
        name: Australia/Perth

    - name: Set timezone to UTC
      when:
        - timezone == 'utc'
      community.general.timezone:
        name: Etc/UTC

    - name: Disable root Login
      lineinfile:
        dest: /etc/ssh/sshd_config
        regexp: "^PermitRootLogin"
        line: "PermitRootLogin no"
        state: present
        backup: yes
      become: yes
      #notify:
      #- restart ssh

    # Install Packages
- name: Update all my DNF based linux hosts
  hosts: dnfbased
  become: yes
  tasks:
    - name: Update DNF Cache
      dnf:
        update_cache: yes
        state: latest

    - name: Enable epel
      ansible.builtin.dnf:
        name: epel-release
        state: latest

    - name: Update DNF Cache
      dnf:
        update_cache: yes
        state: latest

    - name: Upgrade packages
      dnf:
        update_only: yes
        state: latest

    - name: Remove Cockpit
      ansible.builtin.dnf:
        name:
          - cockpit
        state: absent

    - name: Install the latest version of
      ansible.builtin.dnf:
        name:
          - htop
          - iotop
          - nload
          - neofetch
          - vim
          - git
          - tmux
        state: latest

- name: Update all my apt based linux hosts
  hosts: aptbased
  become: yes
  tasks:
    - name: Update APT
      ansible.builtin.apt:
        upgrade: full

    - name: Install a list of packages
      ansible.builtin.apt:
        install_recommends: no
        pkg:
          - htop
          - iotop
          - nload
          - neofetch
          - vim
          - git
          - tmux

  # handlers:
  #   - name: restart ssh
  #     systemctl:
  #       name: sshd
  #       state: restarted
