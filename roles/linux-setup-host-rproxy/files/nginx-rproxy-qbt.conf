server {
    server_name qbt.kierangee.au;
    location / {
        proxy_pass http://qbt.kg.lan:8080/;

        proxy_http_version 1.1;
        http2_push_preload on; # Enable http2 push

        proxy_set_header   Host               127.0.0.1:8080;
        proxy_set_header   X-Forwarded-Proto  $scheme;
        proxy_set_header   X-Forwarded-Host   $http_host;
        proxy_set_header   X-Forwarded-For    $remote_addr;
        proxy_set_header   X-Real-IP          $remote_addr;

        # optionally, you can adjust the POST request size limit, to allow adding a lot of torrents at once:
        #client_max_body_size 100M;

        # since v4.2.2, is possible to configure qBittorrent
        # to set the "Secure" flag for the session cookie automatically.
        # However, that option does nothing unless using qBittorrent's built-in HTTPS functionality.
        # For this use case, where qBittorrent itself is using plain HTTP
        # (and regardless of whether or not the external website uses HTTPS),
        # the flag must be set here, in the proxy configuration itself:
        proxy_cookie_path / "/; Secure";




    }
    listen 443 ssl;
    ssl_certificate /etc/letsencrypt/live/kierangee.au/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/kierangee.au/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
}

server {
    if ($host = qbt.kierangee.au) {
        return 301 https://$host$request_uri;
    }
    server_name qbt.kierangee.au;
    listen 80;
    return 404;
}