---
# - name: Firewall rules
#   ansible.posix.firewalld:
#     service: elasticsearch
#     zone: public
#     permanent: true
#     state: enabled
#   notify:
#     - Reload firewalld

- name: Create per-vhost logging directory
  ansible.builtin.file:
    path: "/var/log/nginx/vhosts/"
    state: directory
    mode: "0750"
    owner: root
    group: nginx

- name: Copy nginx conf
  ansible.builtin.copy:
    src: files/hosts/{{ ansible_hostname }}/nginx.conf
    dest: /etc/nginx/nginx.conf
    mode: "0660"
  notify:
    - Restart nginx

- name: Remove file (delete file)
  ansible.builtin.file:
    path: "{{ item }}"
    state: absent
  loop:
    - /etc/nginx/sites-available
    - /etc/nginx/sites-enabled

- name: Create a directory if it does not exist
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: "0755"
  loop:
    - /etc/nginx/sites-available
    - /etc/nginx/sites-enabled

# Suffix any files you don't want at the minute with .bak
- name: Copy nginx site confs
  ansible.builtin.copy:
    src: "{{ item }}"
    dest: /etc/nginx/sites-available/
    mode: "0660"
  with_fileglob:
    - "files/hosts/{{ ansible_hostname }}/sites-available/*.conf"
  notify:
    - Restart nginx

- name: Build list of nginx configs
  ansible.builtin.find:
    paths: /etc/nginx/sites-available/
    file_type: file
  register: config_files_found

- name: Create symbolic links to make sites available
  ansible.builtin.file:
    src: /etc/nginx/sites-available/{{ item.path | basename }}
    dest: /etc/nginx/sites-enabled/{{ item.path | basename }}
    state: link
  notify:
    - Restart nginx
  loop: "{{ config_files_found.files }}"

- name: Ensure dirs exist
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: "0755"
  loop:
    - /usr/share/nginx/html/
    - /usr/share/nginx/html/private/

- name: Copy public index.html
  ansible.builtin.copy:
    src: "{{ item }}"
    dest: /usr/share/nginx/html/{{ item | basename }}
    mode: "0664"
  with_fileglob: "files/hosts/{{ ansible_hostname }}/public/*"
  notify:
    - Restart nginx

- name: Copy private index.html
  ansible.builtin.copy:
    src: files/hosts/{{ ansible_hostname }}/private/index.html
    dest: /usr/share/nginx/html/private/index.html
    mode: "0664"
  notify:
    - Restart nginx

- name: Download css
  ansible.builtin.shell:
    cmd: |-
      set -o pipefail
      curl -LsS https://github.com/kism/zy.css/releases/download/main/grab.sh | bash
    chdir: /usr/share/nginx/html/
  changed_when: false # Next task will always be true rip

- name: Fix perms
  ansible.builtin.file:
    path: /usr/share/nginx/html/
    recurse: true
    mode: "u=rwX,g=rwX,o=rX"
# TODO copy root cert
