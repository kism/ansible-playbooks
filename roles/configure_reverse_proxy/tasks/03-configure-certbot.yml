---
- name: Create pki directory if it does not exist
  ansible.builtin.file:
    path: /usr/share/nginx/html/pki
    state: directory
    mode: "0755"

- name: Set cloudflare key
  ansible.builtin.copy:
    content: dns_cloudflare_api_token = {{ secret_cloudflare_api_dns }}
    dest: /root/.cloudflare.ini
    mode: "0600"

- name: Initial certbot config
  ansible.builtin.command:
    cmd: >-
      certbot certonly
      --agree-tos
      --email={{ secret_email }}
      -v
      --non-interactive
      --post-hook "service nginx reload"
      --dns-cloudflare
      --dns-cloudflare-credentials /root/.cloudflare.ini
      -d {{ homelab_domain_external }},*.{{ homelab_domain_external }}
  register: configure_reverse_proxy_certbot_output
  changed_when: false or "Certificate not yet due for renewal" not in configure_reverse_proxy_certbot_output.stdout
  failed_when: configure_reverse_proxy_certbot_output.rc != 0 and not "too many certificates" in configure_reverse_proxy_certbot_output.stderr
  notify: Restart nginx

- name: Debug the command output
  ansible.builtin.debug:
    var: configure_reverse_proxy_certbot_output.stdout_lines

- name: Copy systemd units
  ansible.builtin.copy:
    src: files/{{ item }}
    dest: /etc/systemd/system/{{ item }}
    mode: "0644"
    owner: root
    group: root
  loop:
    - certbot_renew.service
    - certbot_renew.timer

- name: Enable certbot renew timer
  ansible.builtin.systemd_service:
    name: certbot_renew.timer
    enabled: true
    daemon_reload: true
    state: started
