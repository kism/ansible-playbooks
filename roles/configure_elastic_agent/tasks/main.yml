---
- name: Stop filebeat service if needed
  ansible.builtin.systemd_service:
    name: filebeat
    state: stopped
  failed_when: false # Only if needeed

- name: Kill all filebeat processes
  ansible.builtin.command:
    cmd: killall filebeat
  failed_when: false # Only if needeed
  register: configure_elastic_agent_kill_output # Only if needed
  changed_when: configure_elastic_agent_kill_output.rc == 0

- name: Remove filebeat if it is installed
  ansible.builtin.package:
    name: filebeat
    state: absent

- name: Include tasks, Repository
  ansible.builtin.include_tasks: "01-{{ ansible_distribution | lower }}-{{ ansible_distribution_major_version }}.yml"

- name: Copy the root cert for elastic-agent
  ansible.builtin.copy:
    src: files/elastic-agent-root.cer
    dest: "{{ configure_elastic_agent_cert_path }}"
    mode: "0444"

- name: Install elastic agent package
  ansible.builtin.package:
    name:
      - elastic-agent
    state: present

- name: Enable elastic-agent service
  ansible.builtin.systemd_service:
    name: elastic-agent
    enabled: true
    state: started

- name: Check if agent needs to be enrolled
  ansible.builtin.command:
    cmd: elastic-agent status
  changed_when: false # Just getting info
  register: configure_elastic_agent_status_output
  retries: 5
  until: configure_elastic_agent_status_output.rc == 0
  delay: 3

- name: Print configure_elastic_agent_status_output
  ansible.builtin.debug:
    var: configure_elastic_agent_status_output.stdout_lines

- name: Block to enroll
  when: false or "(HEALTHY) Connected" not in configure_elastic_agent_status_output.stdout
  block:
    - name: Set fact of enrollment command
      ansible.builtin.set_fact:
        configure_elastic_agent_enroll_command: >-
          elastic-agent
          enroll
          --force
          --url=https://elastic.{{ homelab_domain_external }}:8220
          --enrollment-token={{ secret_elastic_agent_linux_enrolement }}
          --certificate-authorities={{ configure_elastic_agent_cert_path }}

    - name: Debug
      ansible.builtin.debug:
        msg: "{{ configure_elastic_agent_enroll_command }}"

    - name: Enroll agent
      ansible.builtin.command:
        cmd: "{{ configure_elastic_agent_enroll_command }}"
      register: configure_elastic_agent_enroll_command_output
      timeout: 10
      changed_when: false or "Successfully enrolled the Elastic Agent" in configure_elastic_agent_enroll_command_output.stdout

    - name: Debug stdout
      ansible.builtin.debug:
        var: configure_elastic_agent_enroll_command_output.stdout_lines

    - name: Debug stderr
      ansible.builtin.debug:
        var: configure_elastic_agent_enroll_command_output.stderr_lines

    - name: Check success again for a laugh
      ansible.builtin.command:
        cmd: elastic-agent status
      retries: 5
      register: configure_elastic_agent_status_output
      until: configure_elastic_agent_status_output.rc == 0
      delay: 3
      changed_when: false # Just getting info
      failed_when: false or "(HEALTHY) Connected" not in configure_elastic_agent_status_output.stdout
