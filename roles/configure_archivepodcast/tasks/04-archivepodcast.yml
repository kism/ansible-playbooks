---
- name: Install python
  ansible.builtin.package:
    name: python3.11
    state: present

# - name: Install pipx
#   become: true
#   become_user: podcasto
#   ansible.builtin.pip:
#     name: pipx
#     state: present
#     executable: pip3.11

- name: Install poetry python package
  become: true
  become_user: podcasto
  community.general.pipx:
    name: uv

- name: Attempt to change ownership on /opt/archivepodcast
  ansible.builtin.file:
    path: /opt/archivepodcast
    state: directory
    owner: podcasto
    group: podcasto
    recurse: true

- name: Clone archivepodcast
  become: true
  become_user: podcasto
  ansible.builtin.git:
    repo: https://github.com/kism/archivepodcast
    dest: /opt/archivepodcast
    single_branch: true
    version: develop
  notify: Restart archivepodcast

- name: Run uv sync
  become: true
  become_user: podcasto
  ansible.builtin.command:
    cmd: ~/.local/bin/uv sync --frozen --no-install-project --no-group dev --no-group test
    chdir: /opt/archivepodcast
  notify: Restart archivepodcast
  changed_when: true # Safe assumption, no way to know

- name: Fix selinux
  ansible.builtin.command: restorecon -Rv /opt/archivepodcast
  changed_when: false # This command only matters if another task has changed files

- name: Create archivepodcast log file
  ansible.builtin.file:
    path: /var/log/archivepodcast.log
    state: touch
    owner: podcasto
    group: podcasto
    mode: "0664"
  notify: Restart archivepodcast

- name: Copy systemd service
  ansible.builtin.copy:
    src: files/archivepodcast.service
    dest: /etc/systemd/system/archivepodcast.service
    mode: "0644"
  notify: Restart archivepodcast

- name: Copy config
  ansible.builtin.copy:
    content: "{{ secret_config_toml }}"
    dest: /opt/archivepodcast/instance/config.toml
    mode: "0660"
    owner: podcasto
    group: podcasto
  notify: Restart archivepodcast

- name: Enable systemd service
  ansible.builtin.systemd_service:
    name: archivepodcast.service
    enabled: true
    daemon_reload: true
    state: started
    masked: false

- name: Copy archivepodcast logrotate
  ansible.builtin.copy:
    src: files/archivepodcast_logrotate
    dest: /etc/logrotate.d/archivepodcast
    mode: "0644"
  notify: Restart logrotate
