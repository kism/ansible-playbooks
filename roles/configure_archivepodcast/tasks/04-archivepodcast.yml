---
- name: Install pip apt
  become: true
  become_user: root
  ansible.builtin.package:
    name:
      - python3-pip
    state: present

- name: Install pipenv python package
  ansible.builtin.pip:
    name: pipenv

- name: Create archivepodcast directory
  become: true
  become_user: root
  ansible.builtin.file:
    path: /opt/archivepodcast
    state: directory
    owner: podcasto
    group: podcasto
    mode: "0700"

- name: Attempt to change ownership on /opt/archivepodcast
  become: true
  become_user: root
  ansible.builtin.file:
    path: /opt/archivepodcast
    recurse: true
    owner: podcasto
    group: podcasto

- name: Clone archivepodcast
  become: true
  become_user: podcasto
  ansible.builtin.git:
    repo: https://github.com/kism/archivepodcast
    dest: /opt/archivepodcast
    single_branch: true
    version: master
  notify: Restart archivepodcast

- name: git config archivepodcast
  become: true
  become_user: podcasto
  ansible.builtin.command:
    cmd: git config --global --add safe.directory /opt/archivepodcast
  tags:
    - skip_ansible_lint

- name: Run pipenv install
  become: true
  become_user: podcasto
  ansible.builtin.command:
    cmd: /usr/local/bin/pipenv install
    chdir: /opt/archivepodcast
  notify: Restart archivepodcast
  changed_when: true

- name: Run pipenv sync
  become: true
  become_user: podcasto
  ansible.builtin.command:
    cmd: /usr/local/bin/pipenv sync
    chdir: /opt/archivepodcast
  notify: Restart archivepodcast
  changed_when: true

- name: Copy archivepodcast config
  become: true
  become_user: podcasto
  ansible.builtin.copy:
    src: files/{{ ansible_host }}.json
    dest: /opt/archivepodcast/settings.json
    mode: "0600"
  notify: Restart archivepodcast # One day this will be reload...

- name: Create archivepodcast log file
  become: true
  become_user: root
  ansible.builtin.file:
    path: /var/log/archivepodcast.log
    state: touch
    owner: podcasto
    group: podcasto
    mode: "0664"
  notify: Restart archivepodcast
  changed_when: false

- name: Copy systemd service
  become: true
  become_user: root
  ansible.builtin.copy:
    src: files/archivepodcast.service
    dest: /etc/systemd/system/archivepodcast.service
    owner: root
    group: root
    mode: "0644"
  notify: Restart archivepodcast

- name: Enable systemd service
  become: true
  become_user: root
  ansible.builtin.systemd_service:
    name: archivepodcast.service
    enabled: true
    daemon_reload: true
    state: started
    masked: false

- name: Copy archivepodcast logrotate
  become: true
  become_user: root
  ansible.builtin.copy:
    src: files/archivepodcast_logrotate
    dest: /etc/logrotate.d/archivepodcast
    owner: root
    group: root
    mode: "0644"
  notify: Restart logrotate
