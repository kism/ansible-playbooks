---
- name: Download uv setup script to tmp
  ansible.builtin.get_url:
    url: "https://astral.sh/uv/install.sh"
    dest: "/tmp/uv_setup.sh"
    mode: "0755"

- name: Block as podcasto user
  become: true
  become_user: podcasto
  block:
    - name: Run uv setup script
      ansible.builtin.command:
        cmd: "/tmp/uv_setup.sh"
      changed_when: true
      register: uv_setup

    - name: Print uv_setup
      ansible.builtin.debug:
        msg: "{{ uv_setup.stdout }}"

- name: Attempt to change ownership on /opt/archivepodcast
  ansible.builtin.file:
    path: /opt/archivepodcast
    state: directory
    owner: podcasto
    group: podcasto
    recurse: true

- name: Clone archivepodcast
  become: true
  become_user: podcasto
  ansible.builtin.git:
    repo: https://github.com/kism/archivepodcast
    dest: /opt/archivepodcast
    single_branch: false
    version: main
  notify: Restart archivepodcast

- name: Run uv sync
  become: true
  become_user: podcasto
  ansible.builtin.command:
    cmd: ~/.local/bin/uv sync --frozen --no-install-project --no-default-groups
    chdir: /opt/archivepodcast
  notify: Restart archivepodcast
  changed_when: true # Safe assumption, no way to know

- name: Fix selinux
  ansible.builtin.command: restorecon -Rv /opt/archivepodcast
  changed_when: false # This command only matters if another task has changed files

- name: Create archivepodcast log dir
  ansible.builtin.file:
    path: /var/log/archivepodcast
    state: directory
    owner: podcasto
    group: podcasto
    mode: "0770"
  notify: Restart archivepodcast

- name: Copy systemd service
  ansible.builtin.copy:
    src: files/archivepodcast.service
    dest: /etc/systemd/system/archivepodcast.service
    mode: "0644"
  notify: Restart archivepodcast

- name: Create instance folder
  ansible.builtin.file:
    path: /opt/archivepodcast/instance
    state: directory
    owner: podcasto
    group: podcasto
    mode: "0770"

- name: Copy config
  ansible.builtin.copy:
    content: "{{ secret_config_toml }}"
    dest: /opt/archivepodcast/instance/config.toml
    mode: "0660"
    owner: podcasto
    group: podcasto
  notify: Restart archivepodcast

- name: Enable systemd service
  ansible.builtin.systemd_service:
    name: archivepodcast.service
    enabled: true
    daemon_reload: true
    state: started
    masked: false

- name: Copy archivepodcast logrotate
  ansible.builtin.copy:
    src: files/archivepodcast_logrotate
    dest: /etc/logrotate.d/archivepodcast
    mode: "0644"
  notify: Restart logrotate
