---
- name: Figure out if a Seagate Hard Drive is attached
  ansible.builtin.set_fact:
    configure_concept_baremetal_found_seagate: true
  when: item.value['model'] is regex('^ST.*') and item.value['vendor'] == "ATA"
  no_log: true
  with_dict: "{{ ansible_facts['devices'] }}"

- name: Block for openSeaChest install
  when: configure_concept_baremetal_found_seagate
  block:
    - name: Download openSeaChest
      ansible.builtin.unarchive:
        src: >-
          https://github.com/Seagate/openSeaChest/releases/download/v
          {{- configure_concept_baremetal_openseachest_version -}}
          /openSeaChest-v
          {{- configure_concept_baremetal_openseachest_version -}}
          -linux-
          {{- ansible_architecture -}}
          -manylinux.tar.xz
        dest: /opt/
        mode: "0755"
        remote_src: true

    - name: Remove old openSeaChest
      ansible.builtin.file:
        path: /opt/openseachest
        state: absent

    - name: Copy downloaded directory to the openSeaChest direct
      ansible.builtin.copy:
        remote_src: true
        src: /opt/openSeaChest-v{{ configure_concept_baremetal_openseachest_version }}-linux-{{ ansible_architecture }}-manylinux/
        dest: /opt/openseachest
        mode: "0755"

    - name: Remove openSeaChest
      ansible.builtin.file:
        path: /opt/openSeaChest-v{{ configure_concept_baremetal_openseachest_version }}-linux-{{ ansible_architecture }}-manylinux
        state: absent

    - name: Make list of binaries
      ansible.builtin.find:
        paths: /opt/openseachest
        file_type: file
        depth: 0
      register: bins_found

    - name: Extract bin filenames
      ansible.builtin.set_fact:
        bins_found_list: "{{ bins_found.files | map(attribute='path') | map('basename') | list }}"

    - name: Create symbolic links for openSeaChest bins
      ansible.builtin.file:
        src: /opt/openseachest/{{ item }}
        dest: /usr/local/sbin/{{ item }}
        state: link
      loop: "{{ bins_found_list }}"

    - name: Make list of man files
      ansible.builtin.find:
        paths: /opt/openseachest/man/man8/
        file_type: file
        depth: 0
      register: mans_found

    - name: Extract man filenames
      ansible.builtin.set_fact:
        mans_found: "{{ mans_found.files | map(attribute='path') | map('basename') | list }}"

    # Do you need to remove broken symlinks, I dont think so...
    - name: Create symbolic links for openSeaChest man pages
      ansible.builtin.file:
        src: /opt/openseachest/man/man8/{{ item }}
        dest: /usr/share/man/man8/{{ item }}
        state: link
      loop: "{{ bins_found_list }}"

# Install hd-idle
- name: Get hd-idle_arch
  block:
    - name: Set target arch per map if possible
      ansible.builtin.set_fact:
        hdidle_arch: "{{ configure_concept_baremetal_arch_map[ansible_architecture] }}"

  rescue:
    - name: Set default hdidle_arch
      ansible.builtin.set_fact:
        hdidle_arch: "{{ ansible_architecture }}"

- name: Install hd-idle
  ansible.builtin.apt:
    deb: >-
      https://github.com/adelolmo/hd-idle/releases/download/v
      {{- configure_concept_baremetal_hdidle_version -}}
      /hd-idle_
      {{- configure_concept_baremetal_hdidle_version -}}
      _
      {{- hdidle_arch -}}.deb

- name: Install some hdd related packages
  ansible.builtin.apt:
    install_recommends: false
    pkg:
      - hdparm
      - smartmontools
      - rsync
      - libatasmart-bin
    state: present
  when: ansible_pkg_mgr == 'apt'

- name: Install some hdd related packages
  ansible.builtin.dnf:
    pkg:
      - hdparm
      - smartmontools
      - rsync
      - libatasmart-bin
    state: present
  when: ansible_pkg_mgr == 'dnf'

- name: Copy SMART check script
  ansible.builtin.copy:
    src: files/checksmart.sh
    dest: /root/checksmart.sh
    mode: "0700"
