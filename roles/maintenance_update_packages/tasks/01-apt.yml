---
- name: Update APT database
  ansible.builtin.apt:
    update_cache: true
    cache_valid_time: 3600

- name: Get list of upgradable packages
  ansible.builtin.command:
    cmd: apt list --upgradable
  register: apt_packages_to_upgrade_before
  changed_when: false # Only getting info

- name: Update apt packages
  ansible.builtin.apt:
    upgrade: dist
    autoclean: true
    autoremove: true

- name: Get list of upgradable packages
  ansible.builtin.command:
    cmd: apt list --upgradable
  register: apt_packages_to_upgrade_after
  changed_when: false # Only getting info

- name: Set facts to do a diff
  ansible.builtin.set_fact:
    apt_packages_to_upgrade_before: "{{ apt_packages_to_upgrade_before.stdout_lines | difference(['Listing...']) }}"
    apt_packages_to_upgrade_after: "{{ apt_packages_to_upgrade_after.stdout_lines | difference(['Listing...']) }}"

- name: Set facts to do a diff
  ansible.builtin.set_fact:
    apt_packages_upgraded: "{{ apt_packages_to_upgrade_before | difference(apt_packages_to_upgrade_after) }}"
    apt_packages_not_upgraded: "{{ apt_packages_to_upgrade_after | difference(apt_packages_to_upgrade_before) }}"
    patching_packages_changed: {}

- name: Set fact for patching_packages_changed
  ansible.builtin.set_fact:
    patching_packages_changed:
      host: "{{ ansible_hostname }}"
      packages: "{{ patching_packages_changed | combine({'apt_packages_upgraded': apt_packages_upgraded, 'apt_packages_not_upgraded': apt_packages_not_upgraded}) }}"

- name: Format as yml
  ansible.builtin.set_fact:
    patching_packages_changed: "{{ patching_packages_changed | to_yaml(default_flow_style=False) }}"
