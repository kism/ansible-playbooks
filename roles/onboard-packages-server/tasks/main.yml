- name: Install DNF Packages
  when: ansible_pkg_mgr == 'dnf'
  block:
    - name: Update DNF Cache
      ansible.builtin.dnf:
        update_cache: true
        state: present

    - name: Enable epel
      ansible.builtin.dnf:
        name: epel-release
        state: present
      register: epel

    - name: Add repo for oracle linux
      ansible.builtin.yum_repository:
        name: ol9_developer_EPEL
        description: Oracle Linux $releasever EPEL Packages for Development ($basearch)
        file: oracle-epel-ol9
        baseurl: https://yum$ociregion.$ocidomain/repo/OracleLinux/OL9/developer/EPEL/$basearch/
        gpgkey: file:///etc/pki/rpm-gpg/RPM-GPG-KEY-oracle
        gpgcheck: true
        enabled: true
      when: ansible_distribution == "OracleLinux" and ansible_distribution_major_version == "9"
      register: epel


    - name: Update DNF Cache w/epel enabled
      ansible.builtin.dnf:
        update_cache: true
        state: present
      when: epel.changed
      tags:
        - skip_ansible_lint

    - name: Upgrade packages
      ansible.builtin.dnf:
        update_only: true
        state: present

    - name: Remove packages that I want to avoid
      ansible.builtin.dnf:
        name: "{{ item }}"
        state: absent
      loop: "{{ packages_to_remove }}"

    - name: Install useful apps
      ansible.builtin.dnf:
        name: "{{ item }}"
        state: present
      ignore_errors: true
      loop: "{{ packages_to_install }}"
      tags:
        - skip_ansible_lint # Happy for this to partly fail, some systems can't get all of these

    - name: Remove anaconda-ks.cfg
      ansible.builtin.file:
        path: /root/anaconda-ks.cfg
        state: absent

- name: Install apt Packages
  when: ansible_pkg_mgr == 'apt'
  block:
    - name: Update APT
      ansible.builtin.apt:
        update_cache: true
        upgrade: full

    - name: Install useful apps
      ansible.builtin.apt:
        install_recommends: false
        pkg: "{{ item }}"
        state: present
      ignore_errors: true
      loop: "{{ packages_to_install }}"
      tags:
        - skip_ansible_lint # Happy for this to partly fail, some systems can't get all of these

- name: Check if kdump is installed
  ansible.builtin.stat:
    path: /etc/init.d/kdump
  register: kdump_installed

- name: Disable kdump service
  ansible.builtin.service:
    name: kdump
    state: stopped
    enabled: false
  when: kdump_installed.stat.exists
