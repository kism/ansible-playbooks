---
- name: Install Packages
  ansible.builtin.package:
    name:
      - certbot
      - python3-certbot-dns-cloudflare
    state: installed

- name: Enable crond
  ansible.builtin.systemd_service:
    name: crond
    enabled: true
    state: started

- name: Set cloudflare key
  ansible.builtin.copy:
    content: dns_cloudflare_api_token = {{ secret_cloudflare_api_dns }}
    dest: /root/.cloudflare.ini
    mode: "0600"

- name: Initial certbot config
  ansible.builtin.command:
    cmd: >-
      certbot certonly
      --agree-tos
      --email={{ secret_email }}
      -v
      --non-interactive
      --dns-cloudflare
      --dns-cloudflare-credentials /root/.cloudflare.ini
      -d elastic.{{ homelab_domain_external }}
  register: command_output
  changed_when: false # Handled in next task
  failed_when: command_output.rc != 0 and not "too many certificates" in command_output.stderr

- name: Check if certs have changed
  ansible.builtin.find:
    paths: /etc/letsencrypt/live/elastic.{{ homelab_domain_external }}
    age: 30s
    recurse: false
  register: modified_files
  changed_when: modified_files.files | length > 0

- name: Copy certbot script
  ansible.builtin.template:
    src: templates/certbot_elastic.sh.j2
    dest: /opt/scripts/certbot_elastic.sh
    mode: "0755"

- name: Copy systemd timer
  ansible.builtin.copy:
    src: files/certbot.timer
    dest: /etc/systemd/system/certbot.timer
    mode: "0644"

- name: Copy systemd service
  ansible.builtin.copy:
    src: files/certbot.service
    dest: /etc/systemd/system/certbot.service
    mode: "0644"

- name: Enable certbot timer
  ansible.builtin.systemd_service:
    name: certbot.timer
    enabled: true
    daemon_reload: true
    state: started
    masked: false
