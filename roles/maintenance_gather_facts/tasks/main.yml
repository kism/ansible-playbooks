---
- name: Ping for diagnostics
  ansible.builtin.ping:

- name: Debug block chuck vars into a file
  no_log: true
  block:
    - name: Gather facts
      ansible.builtin.setup:

    - name: Populate service facts
      ansible.builtin.service_facts:

    - name: Gather the package facts
      ansible.builtin.package_facts:

    - name: Get user info
      ansible.builtin.getent:
        database: passwd

    - name: Get group info
      ansible.builtin.getent:
        database: group

    # - name: Get ec2 instance facts
    #   amazon.aws.ec2_metadata_facts:
    #   failed_when: false # Easier than checking if the host is an ec2 instance

- name: Debug block chuck vars into a file
  become: false
  delegate_to: localhost
  block:
    # Start outputting to a ansible_distribution_file_variety
    - name: Make temp var so we capture the ansible_facts key
      ansible.builtin.set_fact:
        debug_yaml_output: {}

    - name: Copy ansible_facts into debug_yaml_output var
      ansible.builtin.set_fact:
        debug_yaml_output: "{{ debug_yaml_output | combine({'ansible_facts': ansible_facts}) }}"

    - name: Put facts in a nice yaml
      ansible.builtin.copy:
        dest: "{{ maintenance_gather_facts_facts_debug_file }}"
        content: "{{ debug_yaml_output | to_yaml(default_flow_style=False) }}"
        mode: "0660"
      changed_when: false # Grabbing information to store locally

    - name: Prepend to make valid yml file
      ansible.builtin.lineinfile:
        path: "{{ maintenance_gather_facts_facts_debug_file }}"
        insertbefore: BOF
        line: "---"
      changed_when: false # Grabbing information to store locally

    - name: Print the usual culperates
      ansible.builtin.set_fact:
        print_vars:
          host_things:
            ansible_hostname: "{{ ansible_hostname }}"
            ansible_default_ipv4_address: "{{ ansible_default_ipv4.address }}"
            ansible_distribution_file_variety: "{{ ansible_distribution_file_variety }}"
            ansible_distribution: "{{ ansible_distribution }}"
            ansible_distribution_major_version: "{{ ansible_distribution_major_version }}"
            ansible_distribution_release: "{{ ansible_distribution_release }}"
            ansible_architecture: "{{ ansible_architecture }}"
            ansible_pkg_mgr: "{{ ansible_pkg_mgr }}"
          local_things:
            inventory_hostname: "{{ inventory_hostname }}"
            inventory_hostname_short: "{{ inventory_hostname_short }}"
            env HOME: "{{ lookup('ansible.builtin.env', 'HOME') }}"
            env USER: "{{ lookup('ansible.builtin.env', 'USER') }}"
            env PWD: "{{ lookup('ansible.builtin.env', 'PWD') }}"
            ansible_config_file: "{{ ansible_config_file }}"
            ansible_play_name: "{{ ansible_play_name }}"
            playbook_dir: "{{ playbook_dir }}"
            role_path: "{{ role_path }}"
            inventory_dir: "{{ inventory_dir }}"
            inventory_file: "{{ inventory_file }}"
            ansible_search_path: "{{ ansible_search_path }}"

    - name: Put vars in a nice yaml
      ansible.builtin.copy:
        dest: "{{ maintenance_gather_facts_vars_debug_file }}"
        content: "{{ print_vars | to_yaml(default_flow_style=False) }}"
        mode: "0660"
      changed_when: false # Grabbing information to store locally

    - name: Prepend to make valid yml file
      ansible.builtin.lineinfile:
        path: "{{ maintenance_gather_facts_vars_debug_file }}"
        insertbefore: BOF
        line: "---"
      changed_when: false # Grabbing information to store locally

- name: Run pacman audit for pacman
  when: ansible_pkg_mgr == 'pacman'
  block:
    - name: Run fun audit command
      ansible.builtin.shell:
        cmd: |-
          set -o pipefail
          comm -23 <(pacman -Qqt | sort) <(pacman -Qqg base | sort)
      changed_when: false # Just getting info
      register: top_level_pacman_packages

    - name: Copy stdout to file
      delegate_to: localhost
      become: false
      ansible.builtin.copy:
        content: "{{ top_level_pacman_packages.stdout }}"
        dest: "{{ maintenance_gather_facts_pacman_file }}"
        mode: "0660"
      changed_when: false # Grabbing information to store locally
