---
- name: Populate service facts
  ansible.builtin.service_facts:

- name: Get services that are not not found
  ansible.builtin.set_fact:
    existing_services: []

- name: Get services that are not not found
  ansible.builtin.set_fact:
    existing_services: "{{ existing_services + [item.key] }}"
  when: item.value.status is defined and item.value.status != "not-found"
  with_dict: "{{ ansible_facts.services }}"

- name: Get list of services we want to monitor, that are on the host
  ansible.builtin.set_fact:
    # Sort means that it won't trigger a change unless needed, as facts don't end up in order
    common_services: "{{ configure_telegraf_service_allowlist | intersect(existing_services) | sort }}"

- name: "Template telegraf config: input, systemd_units"
  ansible.builtin.template:
    src: templates/telegraf.d/20-systemd-services.conf.j2
    dest: /etc/telegraf/telegraf.d/20-systemd-services.conf
    mode: "0644"
    owner: root
    group: telegraf
  notify:
    - Restart telegraf

- name: Docker block
  when: ansible_facts['services']['docker.service'] is defined
  block:
    - name: "Copy telegraf config: input, docker"
      ansible.builtin.copy:
        src: files/telegraf.d/20-docker.conf
        dest: /etc/telegraf/telegraf.d/20-docker.conf
        mode: "0644"
        owner: root
        group: telegraf
      notify:
        - Restart telegraf

    - name: Add user to docker group
      ansible.builtin.user:
        name: telegraf
        groups: docker
        append: true

- name: Nvidia Monitoring
  when: ansible_facts['services']['nvidia-persistenced.service'] is defined
  ansible.builtin.copy:
    src: files/telegraf.d/20-nvidia.conf
    dest: /etc/telegraf/telegraf.d/20-nvidia.conf
    mode: "0644"
    owner: root
    group: telegraf
