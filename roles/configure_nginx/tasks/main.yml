---
- name: Enable SELinux
  ansible.posix.selinux:
    policy: targeted
    state: enforcing
  when: ansible_selinux is defined and not ansible_selinux and ansible_selinux.status == 'enabled'

- name: Set httpd_can_network_connect flag on and keep it persistent across reboots
  ansible.posix.seboolean:
    name: httpd_can_network_connect
    state: true
    persistent: true
  when: ansible_selinux is defined and not ansible_selinux and ansible_selinux.status == 'enabled'

- name: Install nginx
  ansible.builtin.package:
    name:
      - nginx
    state: present

- name: Copy nginx.conf
  ansible.builtin.copy:
    src: nginx.conf
    dest: /etc/nginx/nginx.conf
    owner: root
    group: root
    mode: "0644"

- name: Create directories for sites available and enabled
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: root
    group: root
    mode: "0755"
  loop:
    - /etc/nginx/sites-available
    - /etc/nginx/sites-enabled

- name: Nginx enabled and running
  ansible.builtin.systemd_service:
    name: nginx
    enabled: true
  notify: Restart nginx

- name: Allow http and https
  ansible.posix.firewalld:
    service: "{{ item }}"
    zone: public
    permanent: true
    state: enabled
  loop:
    - http
    - https
  notify:
    - Reload firewalld

- name: Copy logrotate config
  ansible.builtin.copy:
    src: logrotate-nginx-vhost
    dest: /etc/logrotate.d/nginx-vhost
    owner: root
    group: root
    mode: "0644"
